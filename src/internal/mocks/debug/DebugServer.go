// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	debug "github.com/pachyderm/pachyderm/v2/src/debug"
	mock "github.com/stretchr/testify/mock"
)

// DebugServer is an autogenerated mock type for the DebugServer type
type DebugServer struct {
	mock.Mock
}

// Binary provides a mock function with given fields: _a0, _a1
func (_m *DebugServer) Binary(_a0 *debug.BinaryRequest, _a1 debug.Debug_BinaryServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*debug.BinaryRequest, debug.Debug_BinaryServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Dump provides a mock function with given fields: _a0, _a1
func (_m *DebugServer) Dump(_a0 *debug.DumpRequest, _a1 debug.Debug_DumpServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*debug.DumpRequest, debug.Debug_DumpServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Profile provides a mock function with given fields: _a0, _a1
func (_m *DebugServer) Profile(_a0 *debug.ProfileRequest, _a1 debug.Debug_ProfileServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*debug.ProfileRequest, debug.Debug_ProfileServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
