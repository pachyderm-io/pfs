syntax = "proto3";

package debug;
option go_package = "github.com/pachyderm/pachyderm/src/client/debug";

import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";

import "client/pps/pps.proto";

message ProfileRequest {
  Profile profile = 1;
  Filter filter = 2;
}

message Profile {
    string name = 1;
    google.protobuf.Duration duration = 2; // only meaningful if name == "cpu"
}

message Filter {
  oneof filter {
    bool pachd = 1;	
    pps.Pipeline pipeline = 2;	
    Worker worker = 3;
  }
}

message Worker {
   string pod = 1;
   bool redirected = 2;
}

message BinaryRequest {
  Filter filter = 1;
}

message DumpRequest {
  Filter filter = 1;
  int64 limit = 2;
}

service Debug {
  rpc Profile(ProfileRequest) returns (stream google.protobuf.BytesValue) {}
  rpc Binary(BinaryRequest) returns (stream google.protobuf.BytesValue) {}
  rpc Dump(DumpRequest) returns (stream google.protobuf.BytesValue) {}
}
