{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "docker-build-proto",
      "type": "shell",
      "command": "eval $(minikube docker-env --shell bash); docker build -t pachyderm_proto etc/proto",
      "problemMatcher": []
    },
    {
      "label": "docker-build-proto-no-cache",
      "type": "shell",
      "command": "eval $(minikube docker-env --shell bash); docker build --no-cache -t pachyderm_proto etc/proto",
      "problemMatcher": []
    },
    {
      "label": "docker-build-proto-no-cache",
      "type": "shell",
      "command": "eval $(docker-machine env --shell bash); docker build --no-cache -t pachyderm_proto etc/proto",
      "problemMatcher": []
    },
    {
      "label": "build-proto",
      "type": "shell",
      "command": "eval $(minikube docker-env --shell bash); find src -regex \".*\\.proto\" | xargs tar cf - | docker run -i pachyderm_proto | tar xf -",
      "problemMatcher": []
    },
    {
      "label": "proto",
      "dependsOrder": "sequence",
      "dependsOn": [
        "docker-build-proto",
        "build-proto"
      ],
      "problemMatcher": []
    },
    {
      "label": "proto-no-cache",
      "dependsOrder": "sequence",
      "dependsOn": [
        "docker-build-proto-no-cache",
        "build-proto"
      ],
      "problemMatcher": []
    },
    {
      "label": "docker-build",
      "type": "shell",
      "command": "./etc/compile/vscode_compile_task.sh",
      "problemMatcher": []
    },
    {
      "label": "launch-dev",
      "dependsOrder": "sequence",
      "dependsOn": [
        "install",
        "undeploy-dev",
        "deploy-dev",
        "wait-dev"
      ],
      "problemMatcher": []
    },
    {
      "label": "docker-push",
      "dependsOrder": "sequence",
      "dependsOn": [
        "install",
        "docker-tag-images",
        "docker-push-images"
      ],
      "problemMatcher": [],
    },
    {
      "label": "docker-tag-images",
      "dependsOrder": "sequence",
      "dependsOn": [
        "docker-tag-pachd",
        "docker-tag-worker"
      ],
    },
    {
      "label": "docker-push-images",
      "dependsOrder": "sequence",
      "dependsOn": [
        "docker-push-pachd",
        "docker-push-worker"
      ],
    },
    {
      "label": "docker-tag-pachd",
      "type": "shell",
      "command": "docker tag pachyderm/pachd pachyderm/pachd:`pachctl version --client-only`"
    },
    {
      "label": "docker-tag-worker",
      "type": "shell",
      "command": "docker tag pachyderm/worker pachyderm/worker:`pachctl version --client-only`"
    },
    {
      "label": "docker-push-pachd",
      "type": "shell",
      "command": "docker push pachyderm/pachd:`pachctl version --client-only`"
    },
    {
      "label": "docker-push-worker",
      "type": "shell",
      "command": "docker push pachyderm/worker:`pachctl version --client-only`"
    },
    {
      "label": "release-pachctl-custom",
      "type": "shell",
	    "command": "VERSION=$(pachctl version --client-only) ./etc/build/release_pachctl.sh $(pachctl version --client-only)"
    },
    {
      "label": "install",
      "type": "shell",
      "command": "./etc/build/vscode_install_task.sh",
      "problemMatcher": []
    },
    {
      "label": "delete-all-dev",
      "type": "shell",
      "command": "yes | pachctl delete all"
    },
    {
      "label": "undeploy-dev",
      "type": "shell",
      "command": "yes | pachctl undeploy"
    },
    {
      "label": "deploy-dev",
      "type": "shell",
      "command": "pachctl deploy local --no-guaranteed -d --dry-run --cluster-deployment-id=dev | kubectl apply -f -"
    },
    {
      "label": "wait-dev",
      "type": "shell",
      "command": "until timeout 1s ./etc/kube/check_ready.sh app=pachd; do sleep 1; done"
    },
    {
      "label": "build-launch",
      "dependsOrder": "sequence",
      "dependsOn": [
        "docker-build",
        "launch-dev"
      ],
      "problemMatcher": []
    }
  ]
}
